@page "/PageArticulo/{IdArticulo:int}"

@using Microsoft.AspNetCore.Identity

@inject ILocalStorageService LocalStorage
@inject ICartService CartService

@using GAMER_TECHNOLOGY.Data.Model
@using GAMER_TECHNOLOGY.Data.Service

@inject IArticuloService ArticuloService
@inject ICarritoService CarritoService
@inject NavigationManager NavigationManager


@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager



<header>
    <div class="container-fluid  header-block trsn py-lg-4 py-0">
        <div class="row align-items-center no-gutters">
            <div class="col-sm-12 text-center">
                <a href="/">
                    <img style="max-width:15%" src="https://firebasestorage.googleapis.com/v0/b/gamertechnology-e709a.appspot.com/o/WhatsApp_Image_2022-04-03_at_11.05.13_PM-removebg-preview.png?alt=media&token=a2b9a609-80f9-495a-b6d2-4ab58d43c7ba" class="navbar-brand store-image img-fluid" />
                </a>
            </div>
        </div>
    </div>
</header>
<EditForm Model="@articulo">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h1 class="page-header">@articulo.Nombre</h1>
            </div>
        </div>
        <div class="row">
            <div class="col-lg-6 mb-4">
                <div>
                    <div class="main-product-image">
                        <img src="@articulo.Imagen" class="img-fluid" />
                    </div>
                </div>
            </div>
            <div class="col-lg-6 mb-4">
                <form class="form-horizontal" method="post">
                    <div class="form-group price_elem row">
                        <label class="col-sm-3 col-md-3 form-control-label nopaddingtop">Price:</label>
                        <div class="col-sm-8 col-md-9">
                            <span class="product-form-price" id="product-form-price">$@string.Format("{0:#,#}",articulo.Precio) COP</span>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="Quantity" class="col-sm-3 col-md-3 form-control-label">Quantity:</label>
                        <div class="col-sm-8 col-md-9">
                            <select class="select select-qty form-control" title="Cantidad" @bind="carrito.Cantidad">
                                <option value="1" selected="selected">1</option>
                                <option value="2">2</option>
                                <option value="3">3</option>
                                <option value="4">4</option>
                                <option value="5">5</option>
                                <option value="6">6</option>
                                <option value="7">7</option>
                                <option value="8">8</option>
                                <option value="9">9</option>
                                <option value="10">10</option>

                            </select>
                        </div>
                    </div>
                    <div class="form-group product-stock product-available row visible">
                        <label class="col-sm-3 col-md-3 form-control-label"></label>
                        <div class="col-sm-8 col-sm-offset-3 col-md-9 col-md-offset-3">

                            <input type="submit" value="Agregar al carrito" @onclick="Save" />

                            <a href="/Articulos" class="btn btn-link btn-sm" title="Continue Shopping">← Continuar Comprando</a>
                        </div>
                    </div>
                    <div class="form-group row">
                        <label class="col-sm-3 col-md-3 form-control-label">Description:</label>
                        <div class="col-sm-8 col-md-9 description">
                            <p>@articulo.Descripcion</p>
                        </div>
                    </div>

                </form>
            </div>
        </div>
    </div>
</EditForm>


@code {

    Carrito carrito = new Carrito { Cantidad = 1 };

    [Parameter]
    public int IdArticulo { get; set; }

    Articulo articulo = new Articulo();

    protected override async Task OnInitializedAsync()
    {
        articulo = await ArticuloService.GetId(IdArticulo);

    }

    [CascadingParameter] Task<AuthenticationState> authenticationStateTask { get; set; }

    public async void Save()
    {
        var user = (await authenticationStateTask).User;
        

        if (SignInManager.IsSignedIn(user))
        {
            // Perform some action only available to authenticated (logged-in) users
            var email = user.Identity.Name;


            carrito.Id_articulo = articulo.IdArticulo;
            carrito.Nombre = articulo.Nombre;
            carrito.Codigo = articulo.Codigo;
            carrito.Precio = articulo.Precio;
            carrito.Descripcion = articulo.Descripcion;
            carrito.Categoria = articulo.Categoria;
            carrito.Imagen = articulo.Imagen;
            carrito.Email_user = email;

            NavigationManager.NavigateTo("/Articulos", true);
            await CarritoService.InsertCarrito(carrito);
        }
        else
        {
            carrito.Id_articulo = articulo.IdArticulo;
            carrito.Nombre = articulo.Nombre;
            carrito.Codigo = articulo.Codigo;
            carrito.Precio = articulo.Precio;
            carrito.Descripcion = articulo.Descripcion;
            carrito.Categoria = articulo.Categoria;
            carrito.Imagen = articulo.Imagen;

            NavigationManager.NavigateTo("/Articulos", true);
            await CartService.AddToCart(carrito);

        }
    }
}
